---
interface Props {
    Images: string[];
    AltText: string[];
}

const {Images} = Astro.props;
const {AltText} = Astro.props;

const total = Images.length;
---

<div id="carousel" class="carousel slide" data-bs-ride="true">
    <div class="carousel-indicators">
      <button type="button" data-bs-target="#carousel" data-bs-slide-to="0" class="active" aria-current="true" aria-label="Slide 1"></button>
      <button type="button" data-bs-target="#carousel" data-bs-slide-to="1" aria-label="Slide 2"></button>
    </div>

    
    <div class="carousel-inner">
        {Images.map((image, index) => (
            <div class={index == 0 ? "carousel-item active" : "carousel-item"} data-bs-interval="10000">
              <img src={image} class="img" alt={AltText[index]}>
            </div>
        ))}
    </div>
    <button class="carousel-control-prev" type="button" data-bs-target="#carousel" data-bs-slide="prev">
      <span class="carousel-control-prev-icon" aria-hidden="true"></span>
      <span class="visually-hidden">Previous</span>
    </button>
    <button class="carousel-control-next" type="button" data-bs-target="#carousel" data-bs-slide="next">
      <span class="carousel-control-next-icon" aria-hidden="true"></span>
      <span class="visually-hidden">Next</span>
    </button>
  </div>